
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "LinkageMaps"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('LinkageMaps')
Loading required package: aplpack
Loading required package: tcltk
Loading Tcl/Tk interface ... done
Loading required package: cluster
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("fuzzyColorPlot")
> ### * fuzzyColorPlot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fuzzyColorPlot
> ### Title: Displays a fuzzy color plot
> ### Aliases: fuzzyColorPlot
> 
> ### ** Examples
> 
> 
> # The example data
> MD <- exampleSet1()
> 
> library(cluster)
> library(MASS)
> 
> D = dist(MD[3:6])
> HK <- princomp(MD[3:6], cor=FALSE, scores=TRUE)
> S <- sammon(D, HK$scores[,1:2])
Initial stress        : 0.00127
stress after  10 iters: 0.00058, magic = 0.500
stress after  20 iters: 0.00058, magic = 0.500
> 
> # A very basic example showing the default colors an symbols
> fuzzyColorPlot(MD[3:6], 5, S$points)
> 
> # Custom symbols 
> fuzzyColorPlot(MD[3:6], 5, S$points, clusterSymbols=c("a","b", "c","d", "e"))
> 
> # A Black-White Plot
> fuzzyColorPlot(MD[3:6], 5, S$points, clusterColors=rep("black", 5), clusterSymbols=15:19)
> 
> 
> 
> 
> cleanEx()

detaching ‘package:MASS’

> nameEx("linkmap")
> ### * linkmap
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: linkmap
> ### Title: Displays a linkage map
> ### Aliases: linkmap
> 
> ### ** Examples
> 
> 
> library(MASS)
> 
> MD <- exampleSet2()
> 
> D <- dist(MD[3:6])
> HK <- princomp(MD[3:6], cor=FALSE, scores=TRUE)
> S <- sammon(D, HK$scores[,1:2])
Initial stress        : 0.00103
stress after  10 iters: 0.00029, magic = 0.500
stress after  20 iters: 0.00029, magic = 0.500
> k <- kmeans(D,center=5)
> linkmap(S$points, D, cluster=k$cluster,main="Milch")
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.692 0.048 0.997 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
